<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.user.manager.dao.TabRolePermissionMapper">
  <resultMap id="BaseResultMap" type="com.user.manager.vo.TabRolePermissionVO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="permission_id" jdbcType="BIGINT" property="permissionId" />
  </resultMap>

  <resultMap id="ExtendResultMap" type="com.user.manager.vo.RolePermissionVO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="permission_id" jdbcType="BIGINT" property="permissionId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
    <result column="auth_code" jdbcType="VARCHAR" property="authCode" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="parent_ids" jdbcType="VARCHAR" property="parentIds" />
    <result column="available" jdbcType="VARCHAR" property="available" />
  </resultMap>


  <select id="selectRolePermissions" resultMap="ExtendResultMap">
    select T.id,T.role_id,T.permission_id,X.name,X.type,
    X.url,X.app_name,X.auth_code,X.parent_id,X.parent_ids,
    X.available
    FROM
    (
      select id,role_id,permission_id
      from tab_role_permission
      where role_id=#{roleId,jdbcType=INTEGER}
    )T LEFT JOIN tab_permission X ON
    T.permission_id = X.id
  </select>



  <sql id="Base_Column_List">
    id, role_id, permission_id
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_role_permission
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByRoleIdAndPermissionId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tab_role_permission
    where role_id = #{roleId,jdbcType=INTEGER} AND permission_id = #{roleId,jdbcType=BIGINT}
  </select>

  <select id="selectByRoleId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tab_role_permission
    where role_id = #{roleId,jdbcType=INTEGER} ORDER BY id
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tab_role_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="beatchDelete" >
      delete from  tab_role_permission where id in
      <foreach item="item" collection="list" open="(" separator="," close=")">
        #{item}
      </foreach>
  </delete>

  <delete id="deleteByRoleIdAndPermissionId">
    delete from tab_role_permission
    where role_id = #{roleId,jdbcType=INTEGER}
    and permission_id = #{permissionId,jdbcType=BIGINT}
  </delete>


  <insert id="insert" parameterType="com.user.manager.vo.TabRolePermissionVO">
    insert into tab_role_permission (id, role_id, permission_id
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{permissionId,jdbcType=BIGINT}
      )
  </insert>

  <insert id="beatchInsert" parameterType="java.util.List">
      insert into tab_role_permission(role_id, permission_id)
      values
      <foreach collection="list" item="item" separator=",">
        (#{item.roleId},#{item.permissionId})
      </foreach>
  </insert>


  <insert id="insertSelective" parameterType="com.user.manager.vo.TabRolePermissionVO">
    insert into tab_role_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.user.manager.vo.TabRolePermissionVO">
    update tab_role_permission
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.user.manager.vo.TabRolePermissionVO">
    update tab_role_permission
    set role_id = #{roleId,jdbcType=INTEGER},
      permission_id = #{permissionId,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>